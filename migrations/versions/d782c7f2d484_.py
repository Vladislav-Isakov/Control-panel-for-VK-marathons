"""empty message

Revision ID: d782c7f2d484
Revises: 
Create Date: 2023-05-26 03:43:04.804512

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd782c7f2d484'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('list_of_access_rights_for_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_list_of_access_rights_for_users'))
    )
    op.create_table('marathon_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_marathon_groups'))
    )
    op.create_table('panel_access_rights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_panel_access_rights'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vk_id', sa.Integer(), nullable=True),
    sa.Column('last_seen', sa.Integer(), nullable=True),
    sa.Column('secret_word_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_vk_id'), ['vk_id'], unique=True)

    op.create_table('access_rights_for_curators_in_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('access_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['access_id'], ['list_of_access_rights_for_users.id'], name=op.f('fk_access_rights_for_curators_in_groups_access_id_list_of_access_rights_for_users')),
    sa.ForeignKeyConstraint(['group_id'], ['marathon_groups.id'], name=op.f('fk_access_rights_for_curators_in_groups_group_id_marathon_groups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_access_rights_for_curators_in_groups'))
    )
    op.create_table('access_rights_for_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_name', sa.String(length=32), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_access_rights_for_users_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_access_rights_for_users'))
    )
    op.create_table('list_of_user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['marathon_groups.id'], name=op.f('fk_list_of_user_groups_group_id_marathon_groups')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_list_of_user_groups_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_list_of_user_groups'))
    )
    op.create_table('location_of_notifications_at_the_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(length=32), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_location_of_notifications_at_the_user_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_location_of_notifications_at_the_user'))
    )
    op.create_table('names_of_marathon_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['marathon_groups.id'], name=op.f('fk_names_of_marathon_groups_group_id_marathon_groups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_names_of_marathon_groups'))
    )
    op.create_table('user_access_rights_in_the_panel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['access_id'], ['panel_access_rights.id'], name=op.f('fk_user_access_rights_in_the_panel_access_id_panel_access_rights')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_access_rights_in_the_panel_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_access_rights_in_the_panel'))
    )
    op.create_table('users_participating_in_the_marathon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['marathon_groups.id'], name=op.f('fk_users_participating_in_the_marathon_group_id_marathon_groups')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_users_participating_in_the_marathon_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users_participating_in_the_marathon'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_participating_in_the_marathon')
    op.drop_table('user_access_rights_in_the_panel')
    op.drop_table('names_of_marathon_groups')
    op.drop_table('location_of_notifications_at_the_user')
    op.drop_table('list_of_user_groups')
    op.drop_table('access_rights_for_users')
    op.drop_table('access_rights_for_curators_in_groups')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_vk_id'))

    op.drop_table('user')
    op.drop_table('panel_access_rights')
    op.drop_table('marathon_groups')
    op.drop_table('list_of_access_rights_for_users')
    # ### end Alembic commands ###
